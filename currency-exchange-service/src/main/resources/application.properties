spring.application.name=currency-exchange
server.port=8000
spring.config.import=optional:configserver:http://localhost:8888

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:currency-exchange
spring.h2.console.enabled=true

spring.jpa.hibernate.ddl-auto=update

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#distributed tracing configuration
#isteklerin %100'ünü takip ediyoruz. %5 demek istersek 0.05 değerini verebilirdik.
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] 


#retry configuration
resilience4j.retry.instances.retry.maxAttempts=5
resilience4j.retry.instances.retry.wait-duration=1s
#bunu true yapınca 1 saniye olan bekleme süresini ivmeli bir şekilde 5.denemeye kadar arttırıyor.
resilience4j.retry.instances.retry.enable-exponential-backoff=true


#circuit breaker configuration
#gelen requestin yüzde 90'ı fail olduğunda default instancesi ile işaretlenen yerlerde circuit breaker devresi open olacak
resilience4j.circuitbreaker.instances.circuit.failure-rate-threshold=90

#rate limiter configuration
# 10 saniyede 2 request'e izin veriyoruz.
resilience4j.ratelimiter.instances.rate.limit-for-period=2
resilience4j.ratelimiter.instances.rate.limit-refresh-period=10s


#bulkhead configuration
#aynı anda sadece 10 tane eşzamanlı request'e izin veriyoruz
resilience4j.bulkhead.instances.bulk.max-concurrent-calls=10
